--
-- MULTI_SHARD_MODIFY
--
-- Create a new range partitioned customer_delete_protocol table and stage data into it.
DROP TABLE IF EXISTS customer_delete_protocol;
CREATE TABLE customer_delete_protocol (
        c_custkey integer not null,
        c_name varchar(25) not null,
        c_address varchar(40) not null,
        c_nationkey integer not null,
        c_phone char(15) not null,
        c_acctbal decimal(15,2) not null,
        c_mktsegment char(10) not null,
        c_comment varchar(117) not null);
SELECT master_create_distributed_table('customer_delete_protocol', 'c_custkey', 'append');

\STAGE customer_delete_protocol FROM '@abs_srcdir@/data/customer.1.data' with delimiter '|'
\STAGE customer_delete_protocol FROM '@abs_srcdir@/data/customer.2.data' with delimiter '|'
\STAGE customer_delete_protocol FROM '@abs_srcdir@/data/customer.3.data' with delimiter '|'

-- Testing master_multi_shard_modify
-- Verify that master_multi_shard_modify cannot be called in a transaction block
BEGIN;
SELECT master_multi_shard_modify('DELETE FROM customer_delete_protocol WHERE c_custkey > 500 AND c_custkey < 500');
ROLLBACK;

-- Check that master_multi_shard_modify cannot be called with non-distributed tables
CREATE TEMPORARY TABLE temporary_nondistributed_table (col_1 integer,col_2 text);
INSERT INTO temporary_nondistributed_table VALUES (37, 'eren'), (31, 'onder');
SELECT master_multi_shard_modify('DELETE FROM temporary_nondistributed_table WHERE col_1 = 37');

-- commands with mutable functions in their quals
SELECT master_multi_shard_modify('DELETE FROM customer_delete_protocol WHERE c_custkey = (random() * 1000)');
SELECT master_multi_shard_modify('DELETE FROM customer_delete_protocol WHERE c_nationkey = (random() * 1000)');

-- commands with mutable but non-volatilte functions(ie: stable func.) in their quals
CREATE FUNCTION temp_stable_func() RETURNS integer AS 'SELECT 1737;' LANGUAGE SQL STABLE;
SELECT master_multi_shard_modify('DELETE FROM customer_delete_protocol WHERE c_custkey = temp_stable_func()');

-- commands with immutable functions in their quals
CREATE FUNCTION temp_immutable_func() RETURNS integer AS 'SELECT 1737;' LANGUAGE SQL IMMUTABLE;
SELECT master_multi_shard_modify('DELETE FROM customer_delete_protocol WHERE c_custkey = temp_immutable_func()');

-- DELETE with expression in WHERE clause
SELECT master_multi_shard_modify('DELETE FROM customer_delete_protocol WHERE c_custkey = (3*18)');

-- commands with a USING clause are unsupported
CREATE TEMP TABLE temp_nations(name text, key integer);
SELECT master_multi_shard_modify('DELETE FROM customer_delete_protocol USING temp_nations WHERE customer_delete_protocol.c_nationkey = temp_nations.key AND temp_nations.name = ''foobar'' ');

-- commands with a RETURNING clause are unsupported
SELECT master_multi_shard_modify('DELETE FROM customer_delete_protocol WHERE c_custkey = 903 RETURNING *');

-- commands containing a CTE are unsupported
SELECT master_multi_shard_modify('WITH deleted_stuff AS (INSERT INTO customer_delete_protocol DEFAULT VALUES RETURNING *) DELETE FROM customer_delete_protocol');

-- Check that we can successfully delete from multiple shards with 1PC
SET citus.multi_shard_commit_protocol TO '1pc';
SELECT count(*) FROM customer_delete_protocol;
SELECT master_multi_shard_modify('DELETE FROM customer_delete_protocol WHERE c_custkey < 100');
SELECT count(*) FROM customer_delete_protocol;

-- Check that we can successfully delete from multiple shards with 2PC
SET citus.multi_shard_commit_protocol TO '2pc';
SELECT count(*) FROM customer_delete_protocol;
SELECT master_multi_shard_modify('DELETE FROM customer_delete_protocol WHERE c_custkey < 200');
SELECT count(*) FROM customer_delete_protocol;

-- Check that shard pruning works
SET client_min_messages TO DEBUG2;
SELECT master_multi_shard_modify('DELETE FROM customer_delete_protocol WHERE c_custkey = 5001');
SET client_min_messages TO NOTICE;

-- Check that master_multi_shard_modify works without partition keys
SELECT master_multi_shard_modify('DELETE FROM customer_delete_protocol WHERE c_name LIKE ''Customer#00000098_'' ');


-- Simple, Single Shard Update
SELECT master_multi_shard_modify('UPDATE customer_delete_protocol SET c_name=''Citus Data Customer'' WHERE c_custkey=303');
SELECT c_name FROM customer_delete_protocol WHERE c_custkey=303;

-- Simple, Multi Shard Update
SELECT master_multi_shard_modify('UPDATE customer_delete_protocol SET c_name=''Citus Data Customer'' WHERE c_custkey>998 AND c_custkey<1002');
SELECT c_name FROM customer_delete_protocol WHERE c_custkey>998 AND c_custkey<1002;

-- expression UPDATE
SELECT master_multi_shard_modify('UPDATE customer_delete_protocol SET c_nationkey=8*37 WHERE c_custkey>998 AND c_custkey<1002');
SELECT c_nationkey FROM customer_delete_protocol WHERE c_custkey>998 AND c_custkey<1002;

-- multi-column UPDATE
SELECT master_multi_shard_modify('UPDATE customer_delete_protocol SET c_comment=''Citus Rocks!'', c_address=''SF'' WHERE c_custkey>998 AND c_custkey<1002');
SELECT c_comment, c_address FROM customer_delete_protocol WHERE c_custkey>998 AND c_custkey<1002;

-- commands with no constraints on the partition key are supported
SELECT master_multi_shard_modify('UPDATE customer_delete_protocol SET c_mktsegment=''Citus'' WHERE c_mktsegment=''MACHINERY'' ');
SELECT count(*) FROM customer_delete_protocol WHERE c_mktsegment='Citus';

-- attempting to change the partition key is unsupported
SELECT master_multi_shard_modify('UPDATE customer_delete_protocol SET c_custkey=3000 WHERE c_custkey < 3000 ');

-- UPDATEs with a FROM clause are unsupported
SELECT master_multi_shard_modify('UPDATE customer_delete_protocol SET c_comment = ''FAIL'' FROM temp_nations WHERE customer_delete_protocol.c_custkey = 777 AND customer_delete_protocol.c_nationkey = temp_nations.key AND temp_nations.name = ''dummy'' ');

-- commands with a RETURNING clause are unsupported
SELECT master_multi_shard_modify('UPDATE customer_delete_protocol SET c_name=''Citus Data Customer'' WHERE c_custkey=353 RETURNING *');

-- commands containing a CTE are unsupported
SELECT master_multi_shard_modify('WITH t AS (INSERT INTO customer_delete_protocol DEFAULT VALUES RETURNING *) UPDATE customer_delete_protocol SET c_comment = ''FAIL'' ');

-- updates referencing just a var are supported
SELECT master_multi_shard_modify('UPDATE customer_delete_protocol SET c_nationkey=c_custkey WHERE c_custkey = 666');
SELECT c_nationkey FROM customer_delete_protocol WHERE c_custkey=666;

-- updates referencing a column are supported
SELECT c_nationkey FROM customer_delete_protocol WHERE c_custkey = 678;
SELECT master_multi_shard_modify('UPDATE customer_delete_protocol SET c_nationkey = c_nationkey + 37 WHERE c_custkey = 678');
SELECT c_nationkey FROM customer_delete_protocol WHERE c_custkey = 678;

-- updates referencing non-IMMUTABLE functions are unsupported
SELECT master_multi_shard_modify('UPDATE customer_delete_protocol SET c_comment = ''FAIL!'' WHERE c_custkey = temp_stable_func()');